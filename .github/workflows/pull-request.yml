name: Pull Request Workflow

on:
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize, reopened ]

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    env:
      WORKING_DIR: ./angular-without-ssr

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        working-directory: ${{ env.WORKING_DIR }}
        run: npm ci

      - name: Setup environment
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          # Kopiowanie environments.default.ts do environments.ts
          cp src/environments/environments.default.ts src/environments/environments.ts
          echo "Skopiowano environments.default.ts do environments.ts"

      - name: Run ESLint
        working-directory: ${{ env.WORKING_DIR }}
        run: npm run lint || echo "Linting issues found but continuing"

      - name: Run Prettier check
        working-directory: ${{ env.WORKING_DIR }}
        run: npx prettier --check "src/**/*.{ts,html,scss,json}" || echo "Formatting issues found but continuing"

  unit-test:
    name: Unit Tests
    needs: lint
    runs-on: ubuntu-latest
    env:
      WORKING_DIR: ./angular-without-ssr

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        working-directory: ${{ env.WORKING_DIR }}
        run: npm ci

      - name: Setup environment
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          # Kopiowanie environments.default.ts do environments.ts
          cp src/environments/environments.default.ts src/environments/environments.ts
          echo "Skopiowano environments.default.ts do environments.ts"

      - name: Run unit tests with coverage
        working-directory: ${{ env.WORKING_DIR }}
        run: npm test -- --no-watch --code-coverage --browsers=ChromeHeadless

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-coverage
          path: ${{ env.WORKING_DIR }}/coverage
          retention-days: 7

  # E2E tests removed

  status-comment:
    name: PR Status Comment
    needs: [unit-test]
    if: always()
    runs-on: ubuntu-latest
    env:
      WORKING_DIR: ./angular-without-ssr

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download unit test coverage
        uses: actions/download-artifact@v4
        with:
          name: unit-test-coverage
          path: unit-coverage

      - name: Generate status comment
        id: status
        run: |
          # Sprawdzenie statusu poprzednich jobów
          if [[ "${{ needs.unit-test.result }}" == "success" ]]; then
            echo "status=✅ All tests passed successfully!" >> $GITHUB_OUTPUT
            echo "color=0e8a16" >> $GITHUB_OUTPUT
          else
            echo "status=❌ Some tests failed. Please check the logs for details." >> $GITHUB_OUTPUT
            echo "color=d73a4a" >> $GITHUB_OUTPUT
          fi

          # Zbieranie informacji o pokryciu kodu
          if [ -f "unit-coverage/index.html" ]; then
            UNIT_COVERAGE=$(grep -o 'class="headerCovTableEntry">.*%' unit-coverage/index.html | head -1 | grep -o '[0-9.]*%')
            echo "unit_coverage=$UNIT_COVERAGE" >> $GITHUB_OUTPUT
          else
            echo "unit_coverage=N/A" >> $GITHUB_OUTPUT
          fi

      - name: Create or update comment
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ## Pull Request Test Results

            **Status**: ${{ steps.status.outputs.status }}

            ### Test Coverage
            - Unit Tests: ${{ steps.status.outputs.unit_coverage }}

            ### Details
            - Unit Tests: ${{ needs.unit-test.result }}

            [View Unit Test Coverage Report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})

            _Workflow run: [#${{ github.run_number }}](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})_
          edit-mode: replace
